version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  # pgAdmin for database management
  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    depends_on:
      - postgres
    restart: unless-stopped

  # Auth Service
  auth-service:
    build: ./services/auth-service
    ports:
      - "8001:8001"
    env_file:
      - ./services/auth-service/.env
    environment:
      - DATABASE_URL=postgresql://auth_user:auth_password@postgres:5432/auth_db
      - JWT_SECRET_KEY=r-R1wNVFS1f18q8fSBE0buQ52YftDHK56u3Xz1zkRMo=
      - JWT_ALGORITHM=HS256
      - JWT_ACCESS_TOKEN_EXPIRE_MINUTES=30
      - SERVICE_NAME=auth-service
      - SERVICE_PORT=8001
      - DEBUG=true
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped

  # Movie Service
  movie-service:
    build: ./services/movie-service
    ports:
      - "8002:8002"
    env_file:
      - ./services/movie-service/.env
    environment:
      - DATABASE_URL=postgresql://movie_user:movie_password@postgres:5432/movie_db
      - SERVICE_NAME=movie-service
      - SERVICE_PORT=8002
      - DEBUG=true
      - AUTH_SERVICE_URL=http://auth-service:8001
      - JWT_SECRET_KEY=r-R1wNVFS1f18q8fSBE0buQ52YftDHK56u3Xz1zkRMo=
      - JWT_ALGORITHM=HS256
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped

  # User Profile Service
  user-profile-service:
    build: ./services/user-profile-service
    ports:
      - "8003:8003"
    env_file:
      - ./services/user-profile-service/.env
    environment:
      - DATABASE_URL=postgresql://profile_user:profile_password@postgres:5432/profile_db
      - SERVICE_NAME=user-profile-service
      - SERVICE_PORT=8003
      - DEBUG=true
      - AUTH_SERVICE_URL=http://auth-service:8001
      - MOVIE_SERVICE_URL=http://movie-service:8002
      - JWT_SECRET_KEY=r-R1wNVFS1f18q8fSBE0buQ52YftDHK56u3Xz1zkRMo=
      - JWT_ALGORITHM=HS256
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped

  # Comments Service
  comments-service:
    build: ./services/comments-service
    ports:
      - "8004:8004"
    env_file:
      - ./services/comments-service/.env
    environment:
      - DATABASE_URL=postgresql://comments_user:comments_password@postgres:5432/comments_db
      - SERVICE_NAME=comments-service
      - SERVICE_PORT=8004
      - DEBUG=true
      - AUTH_SERVICE_URL=http://auth-service:8001
      - MOVIE_SERVICE_URL=http://movie-service:8002
      - JWT_SECRET_KEY=r-R1wNVFS1f18q8fSBE0buQ52YftDHK56u3Xz1zkRMo=
      - JWT_ALGORITHM=HS256
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped

  # Nginx API Gateway
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - auth-service
      - movie-service
      - user-profile-service
      - comments-service
    restart: unless-stopped

volumes:
  postgres_data: